<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Students</title>
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-blue-50 font-sans min-h-screen flex flex-col md:flex-row relative">

  <aside id="sidebar" class="bg-blue-900 text-white w-64 p-6 flex flex-col items-center fixed inset-y-0 left-0 transform -translate-x-full md:translate-x-0 transition-transform duration-300 ease-in-out z-40">
    <div class="bg-white text-blue-900 rounded-full p-4 mb-4">
      <span class="text-2xl font-bold">👤</span>
    </div>
    <h2 class="text-xl font-bold"><%= user.Name %></h2>
    <p class="text-sm mb-6"><%= user.Email_Address %></p>
    <nav aria-label="Primary" class="flex flex-col h-full w-full text-left">
      <div class="space-y-4">
        <a href="/supervisorDashboard" class="block hover:text-blue-300 focus:outline-none focus:text-blue-300">📊 Dashboard</a>
        <a href="/students" class="block hover:text-blue-300 focus:outline-none focus:text-blue-300">👥 Students</a>
        <a href="/calendar" class="block hover:text-blue-300 focus:outline-none focus:text-blue-300">🗓️ Calendar</a>
        <a href="/notifications" class="block hover:text-blue-300">
         🔔 Notifications
         <% if (hasUnreadNotifications) { %>
          <span class="text-red-500 ml-2 font-bold">●</span>
         <% } %>
        </a>
        <a href="/settings" class="block hover:text-blue-300 focus:outline-none focus:text-blue-300">⚙️ Settings</a>
      </div>
      <div class="flex-grow"></div>
      <div>
        <a href="/logout" class="block hover:text-blue-300 focus:outline-none focus:text-blue-300">🚪 Logout</a>
      </div>
    </nav>
  </aside>

  <div id="overlay" class="fixed inset-0 bg-black bg-opacity-50 hidden z-30 md:hidden"></div>

  <main class="flex-1 p-8 overflow-y-auto ml-0 md:ml-64 transition-all duration-300">
    <div class="flex items-center mb-6">
      <button id="sidebarToggleBtn" class="p-2 mr-3 rounded bg-blue-900 text-white focus:outline-none md:hidden" aria-label="Toggle Sidebar">
        <span class="block w-6 h-0.5 bg-white mb-1"></span>
        <span class="block w-6 h-0.5 bg-white mb-1"></span>
        <span class="block w-6 h-0.5 bg-white"></span>
      </button>
      <h1 class="text-2xl font-bold text-blue-900">All Students</h1>
    </div>

    <form method="get" class="mb-6 relative w-full md:w-1/2">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35m0 0A7.5 7.5 0 1110.5 3a7.5 7.5 0 016.15 13.65z" />
      </svg>
      <input
        type="text"
        name="search"
        value="<%= typeof search !== 'undefined' ? search : '' %>"
        placeholder="Search by Mat Number, Name, School, or Department"
        class="pl-10 pr-4 py-2 w-full rounded-md border border-gray-300 text-gray-600 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-orange-500"
      />
    </form>

    <% 
    function highlight(text, term) {
      if (!term || !text) return text;
      const safeTerm = term.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
      const regex = new RegExp(safeTerm, 'gi');
      return text.replace(regex, match => `<span class="bg-orange-500 font-semibold">${match}</span>`);
    }
    %>

    <% if (students.length > 0) { %>
      <div class="bg-white rounded shadow p-4 overflow-x-auto">
        <table class="table-auto w-full text-gray-600" role="grid" aria-label="Students List">
          <thead>
           <tr class="bg-blue-900 text-white text-left">
              <th scope="col" class="p-3">Mat Number</th>
              <th scope="col" class="p-3">Name</th>
              <th scope="col" class="p-3">School</th>
              <th scope="col" class="p-3">Department</th>
            </tr>
          </thead>
          <tbody>
            <% students.forEach(student => { 
                 const url = `/student/${encodeURIComponent(student['mat number'])}`;
            %>
              <tr 
                role="row"
                tabindex="0" 
                class="border border-transparent hover:bg-gray-50 focus:bg-gray-100 focus:ring-2 focus:ring-orange-500 focus:border-orange-500 cursor-pointer rounded"
                data-url="<%= url %>"
                aria-label="View details for <%= student.name %>, Mat Number <%= student['mat number'] %>"
              >
                <td class="p-3" role="gridcell"><%- highlight(student["mat number"], search) %></td>
                <td class="p-3" role="gridcell"><%- highlight(student.name, search) %></td>
                <td class="p-3" role="gridcell"><%- highlight(student.school, search) %></td>
                <td class="p-3" role="gridcell"><%- highlight(student.department, search) %></td>
              </tr>
            <% }) %>
          </tbody>
        </table>
        <div id="no-results" class="hidden bg-white rounded p-4 text-gray-600 text-center py-20">
          No matching item found.
        </div>
      </div>
    <% } else { %>
      <div class="bg-white rounded p-4 text-gray-600 text-center py-20">No students available.</div>
    <% } %>
  </main>

  <script>
    const sidebar = document.getElementById('sidebar');
    const toggleBtn = document.getElementById('sidebarToggleBtn');
    const overlay = document.getElementById('overlay');

    toggleBtn.addEventListener('click', () => {
      sidebar.classList.toggle('-translate-x-full');
      overlay.classList.toggle('hidden');
    });

    overlay.addEventListener('click', () => {
      sidebar.classList.add('-translate-x-full');
      overlay.classList.add('hidden');
    });

    window.addEventListener('resize', () => {
      if (window.innerWidth >= 768) {
        overlay.classList.add('hidden');
        sidebar.classList.remove('-translate-x-full');
      }
    });

    document.addEventListener('DOMContentLoaded', () => {
      const rows = document.querySelectorAll('tbody tr[data-url]');

      rows.forEach(row => {
        row.addEventListener('click', () => {
          const url = row.getAttribute('data-url');
          if (url) {
            window.location.href = url;
          }
        });

        row.addEventListener('keydown', (e) => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            const url = row.getAttribute('data-url');
            if (url) {
              window.location.href = url;
            }
          }
        });
      });
    });

    document.addEventListener('DOMContentLoaded', () => {
      const searchInput = document.querySelector('input[name="search"]');
      const rows = document.querySelectorAll('tbody tr');
      const noResults = document.getElementById('no-results');

      function escapeRegExp(string) {
        return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
      }

      searchInput.addEventListener('input', () => {
        const searchTerm = searchInput.value.toLowerCase().trim();
        const regex = new RegExp(escapeRegExp(searchTerm), 'gi');
        let visibleCount = 0;

        rows.forEach(row => {
          const rowText = Array.from(row.cells)
            .map(cell => cell.textContent.toLowerCase())
            .join(' ');

          if (rowText.includes(searchTerm)) {
            row.style.display = '';
            visibleCount++;

            Array.from(row.cells).forEach(cell => {
              const originalText = cell.textContent;
              if (searchTerm === '') {
                cell.innerHTML = originalText;
              } else {
                cell.innerHTML = originalText.replace(regex, match => `<span class="bg-orange-500 font-semibold">${match}</span>`);
              }
            });
          } else {
            row.style.display = 'none';
          }
        });

        noResults.classList.toggle('hidden', visibleCount > 0);
      });
    });
  </script>
</body>
</html>
