<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Notifications</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-blue-50 font-sans min-h-screen flex">

  <div class="bg-blue-900 text-white w-64 p-6 flex flex-col items-center">
    <div class="bg-white text-blue-900 rounded-full p-4 mb-4">
      <span class="text-2xl font-bold">👤</span>
    </div>
    <h2 class="text-xl font-bold"><%= user.Name %></h2>
    <p class="text-sm"><%= user.Email_Address %></p>
    <nav class="mt-6 space-y-4 text-left w-full">
      <a href="/dashboard" class="block hover:text-blue-300">👥 Students</a>
      <a href="/calendar" class="block hover:text-blue-300">🗓️ Calendar</a>
      <a href="/notifications" class="block hover:text-blue-300">
        🔔 Notifications
        <% if (hasUnreadNotifications) { %>
          <span class="text-red-500 ml-2 font-bold">●</span>
        <% } %>
      </a>
      <a href="/settings" class="block hover:text-blue-300">⚙️ Settings</a>
      <a href="/logout" class="block hover:text-blue-300">🚪 Logout</a>
    </nav>
  </div>

  <main class="flex-1 p-8 overflow-y-auto">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold text-blue-900">Notifications</h1>
      <% if (notifications.length > 0) { %>
        <button id="clearAllBtn" class="bg-orange-500 text-white px-3 py-1 rounded hover:bg-red-600">
        Clear All
        </button>
      <% } %>
    </div>

    <% if (notifications.length > 0) { %>
      <ul id="notificationsList" class="space-y-4">
        <% notifications.forEach(note => { %>
          <li 
            id="notif-<%= note.id %>" 
            class="relative bg-white rounded shadow p-4 border-l-4 <%= note.read ? 'border-gray-300' : 'border-orange-500' %> hover:bg-gray-100 cursor-pointer"
            data-notification-id="<%= note.id %>" <% /* Add data attribute for the notification ID */ %>
            data-mat-number="<%= note.student_mat_number ? note.student_mat_number : '' %>"> <% /* Add data attribute for student mat number */ %>
            
            <p class="text-gray-800"><%= note.message %></p>
            <p class="text-sm text-gray-500 mt-1"><%= new Date(note.created_at).toLocaleString() %></p>

            <button 
              class="absolute top-2 right-2 text-red-500 hover:text-red-700 delete-btn" 
              data-id="<%= note.id %>">❌</button>
          </li>
        <% }) %>
      </ul>
    <% } else { %>
      <p class="text-gray-500">You have no notifications.</p>
    <% } %>
  </main>

  <script>
    async function deleteNotification(id) {
      const confirmDelete = confirm("Delete this notification?");
      if (!confirmDelete) return;

      const res = await fetch(`/notifications/${id}`, {
        method: "DELETE",
        headers: { "Accept": "application/json" }
      });

      if (res.ok) {
        document.getElementById(`notif-${id}`).remove();
        if (!document.querySelectorAll("#notificationsList li").length) {
          location.reload(); 
        }
      } else {
        alert("Failed to delete.");
      }
    }

    document.addEventListener("DOMContentLoaded", () => {
      const notificationsList = document.getElementById("notificationsList");
      const clearAllBtn = document.getElementById("clearAllBtn");

      if (notificationsList) {
        notificationsList.addEventListener("click", (event) => {
          const deleteButton = event.target.closest(".delete-btn");
          if (deleteButton) {
            event.stopPropagation();
            const notificationId = deleteButton.dataset.id;
            deleteNotification(notificationId);
            return;
          }

          const notificationLi = event.target.closest("li[data-notification-id]");
          if (notificationLi) {
            const matNumber = notificationLi.dataset.matNumber;

            if (!matNumber) {
              alert("This notification is not linked to a student.");
              return;
            }
            window.location.href = `/student/${encodeURIComponent(matNumber)}`;
          }
        });
      }

      if (clearAllBtn) {
        clearAllBtn.addEventListener("click", async () => {
          const confirmClear = confirm("Clear all notifications?");
          if (!confirmClear) return;

          const res = await fetch("/notifications", {
            method: "DELETE",
            headers: { "Accept": "application/json" }
          });

          if (res.ok) {
            if (notificationsList) {
              notificationsList.innerHTML = "";
            }
            
            location.reload(); 
          } else {
            alert("Failed to clear.");
          }
        });
      }
    });
  </script>

</body>
</html>
